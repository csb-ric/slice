#              Slice:   v<%= Slice::VERSION::STRING %>
#     Date Generated:   <%= Time.zone.now.strftime("%a, %B %d, %Y at %-l:%M%p") %>
#
#      Recommended R:   v3.1.1 or greater
#  Required Packages:   Hmisc
#
# You can install Hmisc by typing the R command:
#     install.packages('Hmisc')

# Clear existing data and graphics
rm(list=ls())
graphics.off

# Load relevant libraries
  library(Hmisc)

# Open up the CSV file

  # Sets directory to program's filepath
  setwd(getwd())
  slice <- read.csv('<%= @export_formatter.filename %>_raw.csv')

# Apply labels to variables using slice display names

  # Design and Subject Variables
  label(slice$Subject)        <- "Subject ID"
  label(slice$Site)           <- "Site"
  label(slice$Event)          <- "Event"
  label(slice$Design)         <- "Design"
  label(slice$Sheet.ID)       <- "Sheet ID"
  label(slice$Sheet.Coverage) <- "Sheet Coverage"
  label(slice$Sheet.Created)  <- "Sheet Created"
  label(slice$Missing)        <- "Missing"

  # Sheet Variables
<% @export_formatter.labels.each do |name, display_name| %>  label(slice$<%= name %>) <- "<%= display_name %>"
<% end %>

# Create 'factor' variables for single/multi-option choices
  slice$Site <- factor(slice$Site, levels <- c(<%= @export_formatter.sites.collect { |s| "\"#{s.number_or_id}\"" }.join(',') %>))
  levels(slice$Site) <- c(<%= @export_formatter.sites.collect { |s| "\"#{s.name.gsub('"', '\"')}\"" }.join(',') %>)
  slice$Event <- factor(slice$Event, levels <- c(<%= @export_formatter.events.collect { |e| "\"#{e.id}\"" }.join(',') %>))
  levels(slice$Event) <- c(<%= @export_formatter.events.collect { |e| "\"#{e.name.gsub('"', '\"')}\"" }.join(',') %>)
  slice$Design <- factor(slice$Design, levels <- c(<%= @export_formatter.designs.collect { |d| "\"#{d.id}\"" }.join(',') %>))
  levels(slice$Design) <- c(<%= @export_formatter.designs.collect { |d| "\"#{d.name.gsub('"', '\"')}\"" }.join(',') %>)
  slice$Missing <- factor(slice$Missing, levels <- c("0","1"))
  levels(slice$Missing) <- c("No","Yes")
<% @export_formatter.factors.each do |name, domain_options| %>
  slice$<%= name %> <- factor(slice$<%= name %>, levels <- c(<%= domain_options.collect { |domain_option| "\"#{domain_option.value}\"" }.join(',') %>))
  levels(slice$<%= name %>) <- c(<%= domain_options.collect { |domain_option| "\"#{domain_option.name.gsub('"', '\"')}\"" }.join(',') %>)<% end %>

<% if include_grids? %>
slice_grids=read.csv('<%= @export_formatter.filename %>_grids_raw.csv', skip = 2, header = FALSE)
# Apply labels to grid variables
  names(slice_grids)[1] <- "Subject"
  names(slice_grids)[2] <- "Site"
  names(slice_grids)[3] <- "Event"
  names(slice_grids)[4] <- "Design"
  names(slice_grids)[5] <- "Sheet.ID"

  # Design and Subject Variables
  label(slice_grids$Subject)     <- "Subject ID"
  label(slice_grids$Site)        <- "Site"
  label(slice_grids$Event)       <- "Event"
  label(slice_grids$Design)      <- "Design"
  label(slice_grids$Sheet.ID)    <- "Sheet ID"

  # Grid Variables
<% @export_formatter.grid_labels.each_with_index do |(name, display_name), index| %>
  names(slice_grids)[<%= index + 6 %>] <- "<%= name %>"
  label(slice_grids$<%= name %>) <- "<%= display_name %>"
<% end %>

# Create 'factor' variables for single/multi-option choices
<% @export_formatter.grid_factors.each do |name, domain_options| %>
  slice_grids$<%= name %> <- factor(slice_grids$<%= name %>, levels <- c(<%= domain_options.collect { |domain_option| "\"#{domain_option.value}\"" }.join(',') %>))
  levels(slice_grids$<%= name %>) <- c(<%= domain_options.collect { |domain_option| "\"#{domain_option.name.gsub('"', '\"')}\"" }.join(',') %>)<% end %>
<% end %>
