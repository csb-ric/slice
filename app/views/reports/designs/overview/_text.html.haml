- blank_responses = responses.select(&:blank?)
- valid_responses = responses.reject(&:blank?)
- responses_and_subjects = variable.sheet_variables.where(sheet_id: sheet_scope.select(:id)).collect { |sv| [sv.value, sv.sheet.subject] }.reject{ |v, s| v.blank? }.sort_by { |v, s| s.name }

%table.table.table-fixed.table-borderless
  %thead
    %tr
      %th.center N
      %th.center.text-muted Blank
      %th.center Total
  %tbody
    %tr
      %td.center= filter_link Statistics.array_count(valid_responses), @design, variable, ':any', event_id: event_id
      %td.center= filter_link Statistics.array_count(blank_responses), @design, variable, ':blank', event_id: event_id
      %td.center= filter_link Statistics.array_count(responses), @design, nil, nil, event_id: event_id

- if responses_and_subjects.size <= 50
  - responses_and_subjects.each do |response, subject|
    .report-quote= simple_markdown "#{response}\n\n[*#{subject.subject_code}*](#{project_subject_path(@project, subject)})"
- else
  .text-muted Individual responses suppressed since the total amount of responses exceeds 50.
