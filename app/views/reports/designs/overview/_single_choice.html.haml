- missing_codes = variable.missing_codes
- blank_responses = responses.select(&:blank?)
- missing_responses = responses.select{ |r| r.blank? || missing_codes.include?(r) }
- valid_responses = responses.reject{ |r| r.blank? || missing_codes.include?(r) }.map(&:to_i)
- counts = []
- variable.domain_options.where(missing_code: false).each do |domain_option|
  - count = responses.select { |r| r == domain_option.value }.count
  - counts << count if count > 0
- no_responses = (counts.count == 0)

- unless no_responses
  .text-center{ style: 'display: none;font-size: 48px;margin-bottom: 20px;', data: { object: 'sparkline', type: 'pie', values: counts } }
.row.col-buffer
  .col-xs-6.text-right
    %strong N
  .col-xs-6
    %span &nbsp;
    = filter_link Statistics.array_count(valid_responses), @design, variable, ':any', event_id: event_id
    - unless no_responses
      %small.text-muted (100%)

- count_index = -1
- variable.domain_options.each do |domain_option|
  - count = responses.select { |r| r == domain_option.value }.count
  - if !domain_option.missing_code? && (count > 0 || no_responses)
    - count_index += 1
    .row.col-buffer
      .col-xs-6.text-right{ class: domain_option.missing_code? ? 'text-muted' : nil }
        %strong= domain_option.value_and_name
      .col-xs-6
        - unless domain_option.missing_code?
          %span{ style: "background-color: #{@colors[count_index % @colors.size]}" } &nbsp;
        = filter_link(count == 0 ? nil : count, @design, variable, domain_option.value, event_id: event_id)
        - if valid_responses.count != 0 && !domain_option.missing_code?
          - percent = count * 100 / valid_responses.count
          %small.text-muted= "(#{percent}%)"

.row.col-buffer
  .col-xs-6.text-right
    %strong.text-muted Blank
  .col-xs-6
    = filter_link Statistics.array_count(blank_responses), @design, variable, ':blank', event_id: event_id

.row.col-buffer
  .col-xs-6.text-right
    %strong Total
  .col-xs-6
    = filter_link Statistics.array_count(responses), @design, nil, nil, event_id: event_id
