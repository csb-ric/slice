- events_highlighted = (params[:action] == 'events' or (!@subject_event and !@sheet and params[:action] == 'show'))
- show_all_events = true # (events_highlighted or params[:action] == 'choose_event' or params[:action] == 'choose_date' or @subject_event or (@sheet and @sheet.subject_event))
- sheets_highlighted = (params[:action] == 'sheets' or (@sheet and !@sheet.subject_event) or (params[:action] == 'show' and @project.events.where(archived: false).count == 0))
- show_all_sheets = true # (sheets_highlighted or params[:action] == 'data_entry')

%ul.left-navigation
  - if @project.events.where(archived: false).count > 0
    %li
      = link_to events_project_subject_path(@project, @subject), class: "#{'active' if events_highlighted}" do
        .emphasis= @subject.subject_events.count
        = 'Event'.pluralize(@subject.subject_events.count)
      - if show_all_events
        %ul
          - @subject.subject_events.each do |subject_event|
            %li{ data: { object: 'event-droppable', project_id: @project.to_param, subject_event_id: subject_event.id } }
              - event_highlighted = ((params[:action] == 'event' and subject_event == @subject_event) or (params[:action].in?(['show', 'edit']) and @sheet and @sheet.subject_event == subject_event))
              = link_to event_project_subject_path(@project, @subject, event_id: subject_event.event, subject_event_id: subject_event.id, event_date: subject_event.event_date_to_param), class: "#{'active' if event_highlighted}" do
                - sheets_started = sheets_completed = @subject.sheets.where(subject_event_id: subject_event.id, design_id: subject_event.event.designs.pluck(:id)).pluck(:design_id).uniq.count
                - designs_count = subject_event.event.designs.count
                - if sheets_completed == designs_count
                  %span.text-success
                    %span.glyphicon.glyphicon-ok
                - elsif sheets_started == 0
                  %span.text-muted
                    %span.glyphicon.glyphicon-tasks
                - else
                  %span.text-highlight
                    %span.glyphicon.glyphicon-tasks
                = subject_event.event.name
          - if @subject.editable_by? current_user
            %li= link_to '+ New Event', choose_event_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'choose_event' or params[:action] == 'choose_date'}"
  %li
    = link_to sheets_project_subject_path(@project, @subject), class: "#{'active' if sheets_highlighted}" do
      .emphasis= @subject.sheets.count
      = 'Sheet'.pluralize(@subject.sheets.count)
    - if show_all_sheets && @subject.editable_by?(current_user)
      %ul
        %li= link_to '+ Data Entry', data_entry_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'data_entry'}"
  %li= link_to 'Timeline', timeline_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'timeline'}"
  - if @subject.uploaded_files.count > 0 or params[:action] == 'files'
    %li
      = link_to files_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'files'}" do
        .emphasis= @subject.uploaded_files.count
        = 'File'.pluralize(@subject.uploaded_files.count)
  - if @subject.adverse_events.present?
    %li
      = link_to 'Adverse Events', adverse_events_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'adverse_events'}"
      %ul
        - @subject.adverse_events.each do |adverse_event|
          %li= link_to adverse_event.name, [@project, adverse_event]
  - if @subject.comments.count > 0 or params[:action] == 'comments'
    %li
      = link_to comments_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'comments'}" do
        .emphasis= @subject.comments.count
        = 'Comment'.pluralize(@subject.comments.count)
  %li= link_to 'Settings', settings_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'settings'}"
