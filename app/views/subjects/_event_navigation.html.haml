- events_highlighted = (params[:action] == 'events' || (!@subject_event && !@sheet && params[:action] == 'show' && @subject.subject_events.count > 0))
- new_event_highlighted = (%w(choose_event choose_date).include?(params[:action]) || (!@subject_event && !@sheet && params[:action] == 'show' && @subject.subject_events.count == 0))
- sheets_highlighted = (params[:action] == 'sheets' || (@sheet && !@sheet.subject_event) || (params[:action] == 'show' && @project.events.where(archived: false).count == 0 && @subject.sheets.count > 0))
- new_sheet_highlighted = (params[:action] == 'data_entry' || (@sheet && !@sheet.subject_event) || (params[:action] == 'show' && @project.events.where(archived: false).count == 0 && @subject.sheets.count == 0))

%ul.left-navigation
  - if @project.events.where(archived: false).count > 0
    %li
      = link_to events_project_subject_path(@project, @subject), class: "#{'active' if events_highlighted}" do
        .emphasis= @subject.blinded_subject_events(current_user).count
        = 'Event'.pluralize(@subject.blinded_subject_events(current_user).count)
      %ul
        - @subject.blinded_subject_events(current_user).each do |subject_event|
          %li{ data: { object: 'event-droppable', project_id: @project.to_param, subject_event_id: subject_event.id } }
            - event_highlighted = ((params[:action] == 'event' && subject_event == @subject_event) || (params[:action].in?(['show', 'edit']) && @sheet && @sheet.subject_event == subject_event))
            = link_to event_project_subject_path(@project, @subject, event_id: subject_event.event, subject_event_id: subject_event.id, event_date: subject_event.event_date_to_param), class: "#{'active' if event_highlighted}" do
              - sheets_started = sheets_completed = @subject.sheets.where(subject_event_id: subject_event.id, design_id: subject_event.event.designs.pluck(:id)).pluck(:design_id).uniq.count
              - designs_count = subject_event.event.designs.count
              - if sheets_completed == designs_count
                %span.text-success
                  %span.glyphicon.glyphicon-ok
              - elsif sheets_started == 0
                %span.text-muted
                  %span.glyphicon.glyphicon-tasks
              - else
                %span.text-highlight
                  %span.glyphicon.glyphicon-tasks
              = subject_event.event.name
        - if @subject.editable_by? current_user
          %li= link_to '+ New Event', choose_event_project_subject_path(@project, @subject), class: "#{'active' if new_event_highlighted}"
  %li
    = link_to sheets_project_subject_path(@project, @subject), class: "#{'active' if sheets_highlighted}" do
      .emphasis= @subject.blinded_sheets(current_user).count
      = 'Sheet'.pluralize(@subject.blinded_sheets(current_user).count)
    - if @subject.editable_by? current_user
      %ul
        %li= link_to '+ Data Entry', data_entry_project_subject_path(@project, @subject), class: "#{'active' if new_sheet_highlighted}"
  %li= link_to 'Timeline', timeline_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'timeline'}"
  - if @subject.uploaded_files(current_user).count > 0 || params[:action] == 'files'
    %li
      = link_to files_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'files'}" do
        .emphasis= @subject.uploaded_files(current_user).count
        = 'File'.pluralize(@subject.uploaded_files(current_user).count)
  - if @project.adverse_events_enabled? && @project.unblinded?(current_user)
    %li
      = link_to 'Adverse Events', adverse_events_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'adverse_events'}"
      %ul
        - @subject.adverse_events.each do |adverse_event|
          %li= link_to adverse_event.name, [@project, adverse_event]
  - if @subject.blinded_comments(current_user).count > 0 || params[:action] == 'comments'
    %li
      = link_to comments_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'comments'}" do
        .emphasis= @subject.blinded_comments(current_user).count
        = 'Comment'.pluralize(@subject.blinded_comments(current_user).count)
  %li= link_to 'Settings', settings_project_subject_path(@project, @subject), class: "#{'active' if params[:action] == 'settings'}"
