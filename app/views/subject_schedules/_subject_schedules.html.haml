- @subject.subject_schedules.order(:initial_due_date).each do |subject_schedule|
  .panel.panel-default
    .panel-heading
      = link_to 'Remove Schedule', [subject_schedule.subject.project, subject_schedule.subject, subject_schedule], method: :delete, remote: true, class: 'btn btn-xs btn-danger-inverse pull-right', data: { confirm: "Are you sure you want to remove #{subject_schedule.name}?" }
      %h3.panel-title
        = link_to subject_schedule.schedule.name, edit_project_subject_subject_schedule_path(@project, @subject, subject_schedule.id), remote: true, method: :get
        = subject_schedule.initial_due_date.strftime(" &middot; %a, %B %d, %Y").html_safe unless subject_schedule.initial_due_date.blank?
    .panel-body
      .table-responsive
        %table.table{ style: 'margin-bottom:0px' }
          %thead
            %tr
              - subject_schedule.schedule.sorted_items.each do |item|
                - if event = @project.events.find_by_id(item[:event_id])
                  %th
                    = event.name
                    %span{ style: 'font-weight: 300' }
                      - date = subject_schedule.offset_date(item[:interval], item[:units])
                      = date.strftime("<br /> %a, %B %d, %Y").html_safe unless date.blank?
          %tbody
            %tr
              - subject_schedule.schedule.sorted_items.each do |item|
                - item_design_ids = (item[:design_ids] || [])
                - if event = @project.events.find_by_id(item[:event_id])
                  - designs = subject_schedule.schedule.designs( item_design_ids )
                  %td
                    - array_to_sort = []
                    - designs.each do |design|
                      - panel_hash = subject_schedule.panel_hash(item[:event_id], design.id)
                      - array_to_sort << [panel_hash[:order], panel_hash[:name], panel_hash[:css_class], design, item_design_ids.index(design.id.to_s)]
                    - array_to_sort.sort{ |a,b| [a[0], a[4]] <=> [b[0], b[4]] }.group_by{|i| [i[0],i[1],i[2]]}.each do |(order, panel_name, panel_class), panel_items|
                      .panel{ class: "panel-#{panel_class}" }
                        .panel-heading
                          %h3.panel-title{ style: 'font-weight:bold' }= panel_name
                        .panel-body.list-group{ style: 'padding: inherit' }
                          - panel_items.each do |order, panel_name, panel_class, design, position|
                            - if sheet = subject_schedule.sheet(event.id, design.id)
                              = link_to project_sheet_path(sheet.project, sheet), class: 'list-group-item' do
                                = coverage_helper(sheet, 'left')
                                = sheet.name
                                - if sheet.comments.size > 0
                                  %span.badge.badge-info= sheet.comments.size
                            - elsif event
                              = link_to design.name, new_project_sheet_path(@project, sheet: { design_id: design.id, event_id: event.id, subject_schedule_id: subject_schedule.id }, subject_code: @subject.subject_code, subject_acrostic: @subject.acrostic, site_id: @subject.site_id), class: 'list-group-item'
