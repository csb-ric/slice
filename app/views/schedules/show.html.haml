- @title = @schedule.name
.page-header
  %h1
    = link_to @project.name, setup_project_path(@project)
    &middot;
    = link_to "Schedules", project_schedules_path(@project)
    &middot;
    = @title

- unless @schedule.description.blank?
  %blockquote
    = simple_markdown @schedule.description
    %small= @schedule.user.name

.table-responsive
  %table.table.table-striped
    %thead
      %tr
        - @schedule.sorted_items.each do |event_hash|
          - event = @project.events.find_by_id(event_hash[:event_id])
          %th{ style: 'padding-top:0px' }
            = event.name if event
            %div{ style: 'font-weight:300' }
              = event_hash[:interval].to_i
              = event_hash[:units]
    %tbody
      %tr
        - @schedule.sorted_items.each do |event_hash|
          - designs = @schedule.designs( event_hash[:design_ids] )
          %td
            .list-group{ style: 'margin-bottom:0px' }
              - designs.each do |design|
                = link_to design.name, [design.project, design], target: '_blank', class: 'list-group-item'

- valid_subject_schedules = @schedule.subject_schedules.with_subject_status('valid')

%dl.dl-horizontal
  %dt Information
  %dd
    = pluralize valid_subject_schedules.count, 'schedule'
    assigned for
    = pluralize valid_subject_schedules.pluck( :subject_id ).uniq.count, 'subject'

  - @schedule.sorted_items.each do |event_hash|
    - event = @project.events.find_by_id(event_hash[:event_id])
    - if event
      %dt
        = event.name
        %div{ style: 'font-weight:300' }
          = event_hash[:interval].to_i
          = event_hash[:units]
      %dd
        - designs = @schedule.designs( event_hash[:design_ids] )
        %table.table.table-fixed{ style: 'margin-top:-8px' }
          %thead
            %tr
              %th Design
              %th Entered
              %th Unentered
          - designs.each do |design|
            %tr
              %td= design.name
              %td
                - assigned_count = valid_subject_schedules.count
                - entered_count = Sheet.where( subject_schedule_id: valid_subject_schedules.pluck(:id), event_id: event.id, design_id: design.id ).count
                - unentered_count = assigned_count - entered_count
                - if entered_count > 0
                  = entered_count
                  %span.text-muted{ style: 'font-size:0.7em' }
                    = succeed '%' do
                      = entered_count * 100 / assigned_count if assigned_count > 0
              %td
                - if unentered_count > 0
                  = link_to unentered_count, project_subjects_path(@project, without_design_id: design.id, without_event_id: event.id, without_schedule_id: @schedule.id)
                  %span.text-muted{ style: 'font-size:0.7em' }
                    = succeed '%' do
                      = unentered_count * 100 / assigned_count if assigned_count > 0
