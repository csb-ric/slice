-# This file shows a variable for use in a sheet
- disabled = '' if defined?(disabled) == nil
- show_values = true unless defined?(show_values)


- sheet_variable = sheet_variables.select{ |sv| sv.variable_id == variable.id }.first
- response = (params[:variables].blank? ? (sheet_variable ? sheet_variable.get_response(:raw) : nil) : params[:variables][variable.id.to_s])

- value = variable.response_to_value(response)
- validate_response = variable.validate_value(@design, value)

.form-group{ id: "varvar_#{variable.id}", class: "#{cycle('variable-shade', 'variable-blind')} #{"variable-grid" if variable.variable_type == 'grid'} #{'variable-errors' if validate_response == 'error'} #{'variable-warnings' if validate_response == 'warning'}", data: { object: "variable-container", required: "#{@option[:required] if @option}", required_field: "variables[#{variable.id}]#{'[]' if variable.variable_type == 'checkbox'}", required_type: variable.variable_type } }
  - if variable.uses_scale?
    -# Nothing
  - elsif ['invisible', 'gone'].include?(variable.display_name_visibility)
    .col-xs-12
      %label
        = variable.display_name
        = render 'options/required', option: @option
    %div{ style: "clear:both" }
  - else
    %label.col-md-3.control-label{ for: "variable_#{variable.id}" }
      = variable.display_name
      = render 'options/required', option: @option

  - col_class = 'col-xs-12'
  - col_class = 'col-md-9' if variable.display_name_visibility != 'gone' and not variable.uses_scale?

  %div{ class: "#{col_class} #{'col-md-offset-3' if variable.display_name_visibility == 'invisible' and not variable.uses_scale?}" }
    %div{ style: "line-height:30px" }
      - if Variable::TYPE.flatten.uniq.include?(variable.variable_type)
        = render "sheet_variables/form/#{variable.variable_type}", response: response, disabled: disabled, variable: variable, field_name: "variables[#{variable.id}]", show_values: show_values, object: sheet_variable
      - else
        = hidden_field_tag "variables[#{variable.id}]", nil, disabled: disabled
        Unsupported Variable Type
        = variable.variable_type
