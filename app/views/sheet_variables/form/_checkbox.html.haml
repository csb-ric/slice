- is_grid = defined?(grid)
- show_values = true unless defined?(show_values)

- target_name = field_name.gsub("[", "_").gsub("]", "")
- values = variable.response_to_value(response)
- domain_options = variable.domain_options_with_user(response, current_user)

%div{ data: { object: "validate", project_id: @project.to_param, variable_id: variable.id, target_name: target_name, components: "checkbox", status: variable.validator.status(values) } }
  = hidden_field_tag "#{field_name}[]", nil, disabled: disabled, data: { calculation_id: variable.id, name: variable.name, variable_type: variable.variable_type }
  - if variable.alignment == "scale"
    %table.table.table-borderless
      %col{ width: "100px" }
      - (1..domain_options.count).each do
        = content_tag :col, nil, width: "#{100 / (domain_options.count + 2)}%"
      %tbody
        %tr
          %th{ style: "min-width: 100px;" }
            = variable.display_name
            = render "design_options/required", design_option: design_option if design_option
          - domain_options.each do |domain_option|
            - selected = (values.include?(domain_option.value))
            %td.text-center
              = render "sheet_variables/form/parts/checkbox_scale", form: form, variable: variable, field_name: field_name, target_name: target_name, selected: selected, domain_option: domain_option, show_values: show_values, is_grid: is_grid, disabled: disabled
  - else
    - domain_options.each do |domain_option|
      - selected = values.include?(domain_option.value)
      = render "sheet_variables/form/parts/checkbox", form: form, variable: variable, field_name: field_name, target_name: target_name, selected: selected, domain_option: domain_option, show_values: show_values, is_grid: is_grid, disabled: disabled
