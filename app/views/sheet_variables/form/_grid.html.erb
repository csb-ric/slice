<%# Range should either be the existing positions (which are long strings) or the positions from the sheet_variables %>
<% if not params[:variables].blank? and not params[:variables][variable.id.to_s].blank? %>
  <% range = params[:variables][variable.id.to_s].keys %>
<% else %>
  <% max_position = sheet_variable ? (sheet_variable.grids.pluck(:position) + [variable.default_row_number - 1]).max.to_i : (variable.default_row_number - 1) %>
  <% range = (0..max_position) %>
<% end %>
<% show_values = true unless defined?(show_values) %>

<table class="table table-hover">
  <thead>
    <tr>
      <% variable.grid_variables.each do |grid_variable_id| %>
        <% v = Variable.find_by_id(grid_variable_id[:variable_id]) %>
        <th><%= v.display_name if v %></th>
      <% end %>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody id="variable_<%= variable.id %>_grid_container" class="grid_sortable">
    <% range.each do |position| %>
      <%= render partial: "sheet_variables/form/grid_variables", locals: { disabled: disabled, sheet_variable: sheet_variable, position: position, variable: variable, show_values: show_values } %>
    <% end %>
  </tbody>
</table>

<%= link_to 'Add Row', '#', class: 'btn btn-default btn-xs', data: { object: 'grid-row-add', variable_id: variable.id }, tabindex: "-1" if variable.multiple_rows? %>
