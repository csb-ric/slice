- @title = 'Sheets'

= render 'projects/tabbed_menu', links: [['Sheets', project_sheets_path(@project)]]

.mini-menu-outer
  .mini-menu-left-fixed
    = render 'projects/menu_mini'
  .mini-menu-right-fluid
    %h2.underline-header
      = @title
      .per-page
        = render 'contour/layouts/per_page', per_page: 40, object_count: @sheets.total_count

    #sheets= render 'sheets/sheets'

    .jumbotron
      = form_tag project_sheets_path(@project), method: :get, id: 'sheets_search', class: 'form-vertical' do
        = hidden_field_tag :order, params[:order]

        .form-group
          = label :search, 'Search', class: 'control-label'
          = text_field_tag 'search', params[:search], class: 'form-control', placeholder: 'Design Name or Subject Code', autocomplete: 'off'
        .form-group
          = label :sheet_after, 'Date after', class: 'control-label'
          = text_field_tag :sheet_after, params[:sheet_after], class: 'datepicker form-control'

        .form-group
          = label :sheet_before, 'Date before', class: 'control-label'
          = text_field_tag :sheet_before, params[:sheet_before], class: 'datepicker form-control'

        - viewable_sites = current_user.all_viewable_sites.where(project_id: @project.id)
        - if viewable_sites.count > 1
          .form-group
            = label :site_id, 'Site', class: 'control-label'
            = select_tag :site_id, options_for_select([['---', nil]] + current_user.all_viewable_sites.where(project_id: @project.id).order(:name).collect{|s| [s.name, s.id]}, params[:site_id]), class: 'form-control'

        .form-group
          = label :design_id, 'Design', class: 'control-label'
          = select_tag :design_id, options_for_select([['---', nil]] + current_user.all_viewable_designs.where(project_id: @project.id).order(:name).collect{|d| [d.name, d.id]}, params[:design_id]), class: 'form-control'
        .form-group
          = label :user_id, 'Creator', class: 'control-label'
          = select_tag 'user_id', options_for_select([['---', nil]] + User.where( id: @project.sheets.select(:user_id) ).order('last_name, first_name').collect{|u| [u.reverse_name, u.id]}, params[:user_id]), class: 'form-control'

        - if @project.lockable?
          .form-group
            = label :locked, 'Locked', class: 'control-label'
            .btn-group{ data: { toggle: "buttons" } }
              %label.btn.btn-default.btn-xs{ class: "#{'active' if params[:locked].to_s == '1'}" }
                = check_box_tag 'locked', '1', params[:locked].to_s == '1', id: 'locked'
                Filter Locked

        - (params[:f] || []).each do |filter|
          .form-group
            - if v = @project.variable_by_id(filter[:variable_id])
              = label "variable_id_#{filter[:variable_id]}", v.display_name, class: 'control-label'
              = hidden_field_tag "f[][variable_id]", filter[:variable_id]
              = hidden_field_tag "f[][start_date]", filter[:start_date]
              = hidden_field_tag "f[][end_date]", filter[:end_date]
              - if filter[:missing] == '1'
                %span.label.label-default{ style: "background-color:#ffc8ba;", title: "Includes Missing" } m
              - if ['sheet_date', 'date'].include?(v.variable_type)
                %span.label.label-default
                  = filter[:start_date]
                to
                %span.label.label-default
                  = filter[:end_date]
              - else
                - if ['dropdown', 'radio', 'checkbox'].include?(v.variable_type)
                  = select_tag 'f[][value]', options_for_select(v.options_missing_at_end.collect{|o| ["#{o[:value]}: #{o[:name]}", o[:value]]} + [[':any', ':any'],[':missing', ':missing']], filter[:value]), class: 'form-control'
                - else
                  = hidden_field_tag "f[][value]", filter[:value]
                  %span.label.label-default= filter[:value]

        .form-group{ style: 'margin-top: 20px' }
          = submit_tag 'Search', class: 'btn btn-primary', name: nil
          = link_to 'Reset', project_sheets_path(@project), class: 'btn btn-default'
