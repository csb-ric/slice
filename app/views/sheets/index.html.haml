- @title = 'Sheets'
- @menu_title = "#{@project.name} #{@title}"

= render 'projects/side_nav'

- content_for :header do
  .background-gradient
  .header-container
    .container
      %h1.page-heading
        .pull-right
          .per-page= render 'layouts/per_page', per_page: 40, object_count: @sheets.total_count
        = render 'layouts/side_nav_header_button'
        = @title
        = render 'search/toggle'

.search-container-relative
  .search-container{ class: params[:search].present? ? 'search-container-visible' : nil }
    - url = project_sheets_path(@project)
    = form_tag url, method: :get, class: 'form-vertical text-left' do
      = hidden_field_tag :order, params[:order]
      = hidden_field_tag :design_id, params[:design_id]
      = hidden_field_tag :site_id, params[:site_id]
      = hidden_field_tag :user_id, params[:user_id]
      .form-group{ style: params[:f] && params[:f].size > 0 ? nil : 'margin: 0;' }
        .input-group
          = text_field_tag :search, params[:search], autocomplete: 'off', class: 'form-control', placeholder: "Search #{@title}", data: { object: 'variable-name-autocomplete', project_id: @project.to_param }
          %span.input-group-btn{ style: 'vertical-align: bottom;' }
            = submit_tag 'Search', class: 'btn btn-primary', name: nil
            - if params[:search].present?
              = link_to url, class: 'btn btn-default' do
                &times;

      - (params[:f] || []).each do |filter|
        - v = @project.variable_by_id(filter[:variable_id])
        - if v
          .form-group
            = label "variable_id_#{filter[:variable_id]}", v.display_name, class: 'control-label'
            = hidden_field_tag "f[][variable_id]", filter[:variable_id]
            = hidden_field_tag "f[][start_date]", filter[:start_date]
            = hidden_field_tag "f[][end_date]", filter[:end_date]
            - if filter[:missing] == '1'
              %span.label.label-default{ style: "background-color:#ffc8ba;", title: "Includes Missing" } m
            - if ['sheet_date', 'date'].include?(v.variable_type)
              .form-control
                = filter[:start_date]
                to
                = filter[:end_date]
            - else
              - if ['dropdown', 'radio', 'checkbox'].include?(v.variable_type)
                = select_tag 'f[][value]', options_for_select(v.options_missing_at_end.collect{|o| ["#{o[:value]}: #{o[:name]}", o[:value]]} + [[':any', ':any'],[':missing', ':missing']], filter[:value]), class: 'form-control'
              - else
                .form-control
                  = hidden_field_tag "f[][value]", filter[:value]
                  = filter[:value]

#sheets= render 'sheets/sheets'
