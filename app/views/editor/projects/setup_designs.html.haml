- @title = "Setup Designs"
- @menu_title = "#{@project.name} #{@title}"

- content_for :sidebar, render("projects/sidebar")
- content_for :header, @title

- content_for :breadcrumbs do
  %ol
    %li.breadcrumb-muted setup designs

.d-flex
  .flex-fill.p-3
    %h2 Designs
    .mb-3.small.text-muted
      Set "Adverse Events" category on
      = link_to "designs", project_designs_path(@project)
      to see them listed here.
    - designs = @project.designs.includes(:category).where(categories: { use_for_adverse_events: true }).order(:name)
    .aer-designs
      - designs.each do |design|
        .aer-design{ data: { object: "aer-designs-draggable", design_id: design.id } }
          = icon("fas", "arrows-alt")
          = design.name

  .flex-fill.p-3
    .mb-5
      %h2 Reporter
      .aer-designs{ data: { object: "aer-designs-sortable", url: submit_designs_editor_project_path(@project, role: "reporter"), pathway_id: "reporter" } }
        - designments = @project.ae_designments.where(ae_team_pathway_id: nil, role: "reporter").order(Arel.sql("position nulls last")).includes(:design)
        = render "editor/projects/designments", project: @project, designments: designments

    - @project.ae_teams.each do |team|
      .mb-5
        %h2= team.name
        - if team.ae_team_pathways.present?
          - team.ae_team_pathways.each do |pathway|
            .mb-3
              %strong= pathway.name
              .aer-designs{ data: { object: "aer-designs-sortable", url: submit_designs_editor_project_path(@project, pathway_id: pathway.id, role: "team"), pathway_id: pathway.id } }
                - designments = pathway.ae_designments.includes(:design)
                = render "editor/projects/designments", project: @project, designments: designments
        - else
          .text-muted No pathways found.

    .mb-5
      %h2 AE Admin
      .aer-designs{ data: { object: "aer-designs-sortable", url: submit_designs_editor_project_path(@project, role: "admin"), pathway_id: "admin" } }
        - designments = @project.ae_designments.where(ae_team_pathway_id: nil, role: "admin").order(Arel.sql("position nulls last")).includes(:design)
        = render "editor/projects/designments", project: @project, designments: designments
