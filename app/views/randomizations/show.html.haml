- @title = "Randomization ##{@randomization.name}"
- @menu_title = "#{@project.name} #{@title}"

- if @randomization.subject
  = @subject = @randomization.subject; render 'subjects/side_nav'
- else
  = render 'projects/side_nav'

- content_for :header do
  .background-gradient
  .header-container
    .container
      %h1.page-heading
        .pull-right
          - if @randomization.editable_by?(current_user)
            - if @randomization.randomized?
              = link_to 'Undo', undo_project_randomization_path(@project, @randomization), method: :patch, class: 'btn btn-danger-inverse', data: { confirm: "Are you sure you want to remove subject#{" from #{@randomization.list.name}" if @randomization.list}?" }
        = @title

- if @randomization.subject && @randomization.randomized_by && @randomization.treatment_arm
  .jumbotron
    %h2.center{ style: 'margin: 0;' }
      %span.hidden-sm.hidden-md.hidden-lg= @randomization.treatment_arm.short_name
      %span.hidden-xs= @randomization.treatment_arm.name
    %br
    %p.center
      %strong
        = @randomization.subject.name
      randomized
      %span.hidden-sm.hidden-md.hidden-lg= simple_date @randomization.randomized_at
      %span.hidden-xs= simple_time @randomization.randomized_at
      %br
      by
      = @randomization.randomized_by.name

- if @randomization.tasks.count > 0
  .pull-right
    = link_to schedule_project_randomization_path(@project, @randomization, format: 'pdf'), class: 'btn btn-xs btn-default' do
      %span.glyphicon.glyphicon-print
      Print Schedule

  %h3.text-white.text-shadow
    Schedule of Events

  .dashboard-container
    %table.table.table-striped.table-borderless.table-hover
      %thead
        %tr
          %th.center
          %th Task
          %th Due Date
      %tbody
        - @randomization.tasks.each do |task|
          %tr
            %td
              - if task.completed?
                %span.glyphicon.glyphicon-check
              - else
                %span.glyphicon.glyphicon-unchecked
            %td= link_to task.description, [task.project, task]
            %td
              %span.hidden-sm.hidden-md.hidden-lg= task.due_date.strftime('%b %-d, %Y')
              %span.hidden-xs= task.due_date.strftime('%a, %B %-d, %Y')

%h3.text-white.text-shadow
  Randomization Details
.dashboard-container

  %table.table.table-borderless.table-striped.table-hover
    %col.hidden-xs{ width: '30%' }
    %col.hidden-sm.hidden-md.hidden-lg{ width: '50%' }
    %tr
      %th Randomization Scheme
      %td= @randomization.randomization_scheme.name

    %tr
      %th List
      %td= @randomization.list.name

    %tr
      %th List Position
      %td
        - if @randomization.randomization_scheme.permuted_block?
          = @randomization.position
        - else
          = @randomization.list_position


    - if @randomization.randomization_scheme && @randomization.randomization_scheme.minimization?
      - @randomization.randomization_characteristics.joins(:stratification_factor).order('stratification_factors.name').each do |randomization_characteristic|
        %tr
          %th= randomization_characteristic.stratification_factor.name
          %td
            - if sfo = randomization_characteristic.stratification_factor_option
              = sfo.label
            - elsif site = randomization_characteristic.site
              %span.hidden-xs= site.name
              %span.hidden-sm.hidden-md.hidden-lg= site.short_name

- if @randomization.randomization_scheme && @randomization.randomization_scheme.minimization? && @randomization.dice_roll && @randomization.dice_roll_cutoff && @project.editable_by?(current_user)
  %h3.text-white.text-shadow
    Notes
  .dashboard-container
    %table.table.table-borderless.table-striped
      %col.hidden-xs{ width: '30%' }
      %col.hidden-sm.hidden-md.hidden-lg{ width: '50%' }
      %tr
        %th Is treatment arm selection random?
        %td
          - if @randomization.dice_roll >= @randomization.dice_roll_cutoff
            %p
              No,
              %span{ rel: 'tooltip', title: 'Random Roll Between 0 and 99', data: { placement: 'right', container: 'body' } }
                %mark= @randomization.dice_roll
              is greater than or equal to
              = succeed '.' do
                %span{ rel: 'tooltip', title: 'Set by Scheme: Can be between 0 (Never Random) and 100 (Always Random)', data: { placement: 'right', container: 'body' } }= @randomization.dice_roll_cutoff
            %p Select treatment arm based on criteria distributions.
          - else
            %p
              Yes,
              %mark= @randomization.dice_roll
              is less than
              = succeed '.' do
                = @randomization.dice_roll_cutoff
            %p Randomly select treatment arm.

      - if @randomization.dice_roll >= @randomization.dice_roll_cutoff
        %tr
          %td{ colspan: 2 }
            %table.table.table-striped
              - if @randomization.past_distributions[:treatment_arms].is_a?(Array)
                %thead
                  %tr
                    %th Stratification Factor
                    - @randomization.past_distributions[:treatment_arms].each do |arm_hash|
                      - treatment_arm = @randomization.randomization_scheme.treatment_arms.find_by(id: arm_hash[:id])
                      - if treatment_arm
                        %th{ style: 'text-align:right' }
                          %span.hidden-xs.hidden-sm= treatment_arm.name
                          %span.hidden-md.hidden-lg= treatment_arm.short_name
              - if @randomization.past_distributions[:stratification_factors].is_a?(Array)
                %tbody
                  - @randomization.past_distributions[:stratification_factors].each do |sf_hash|
                    %tr
                      %td= sf_hash[:name]
                      - if sf_hash[:treatment_arm_counts].is_a?(Array)
                        - sf_hash[:treatment_arm_counts].each do |ta_hash|
                          %td{ style: 'text-align:right' }= ta_hash[:count]
              - if @randomization.past_distributions[:totals].is_a?(Array) || (@randomization.past_distributions[:weighted_totals].is_a?(Array) && @randomization.past_distributions[:treatment_arms].is_a?(Array))
                %tfoot
                  - if @randomization.past_distributions[:totals].is_a?(Array)
                    %tr
                      %th Total
                      - @randomization.past_distributions[:totals].each do |total_hash|
                        %th{ style: 'text-align:right' }= total_hash[:count]
                  - if @randomization.past_distributions[:weighted_totals].is_a?(Array)
                    %tr
                      %th Weighted Total
                      - @randomization.past_distributions[:weighted_totals].each do |total_hash|
                        %th{ style: 'text-align:right', class: "#{'success' if total_hash[:treatment_arm_id].in?(@randomization.weighted_eligible_arms.collect{|h| h[:id]})}" }= total_hash[:count]

      %tr
        %th Weighted Eligible Arms
        %td
          %ul.list-unstyled
            - @randomization.weighted_eligible_arms.each do |arm_hash|
              - treatment_arm = @randomization.randomization_scheme.treatment_arms.find_by(id: arm_hash[:id])
              - if treatment_arm
                %li
                  %code.hidden-xs= treatment_arm.name
                  %code.hidden-sm.hidden-md.hidden-lg= treatment_arm.short_name
      %tr
        %th Treatment Arm Chosen from Eligible Treatment Arms
        %td
          %mark.hidden-xs= @randomization.treatment_arm.name
          %mark.hidden-sm.hidden-md.hidden-lg= @randomization.treatment_arm.short_name
          selected.
