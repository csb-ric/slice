- if @domain.errors.any?
  .callout.callout-danger
    %strong
      = pluralize(@domain.errors.count, "error")
      prohibited this domain from being saved

    %ul
      - @domain.errors.full_messages.each do |msg|
        %li= msg

- if @domain.new_record?
  .form-group
    %label.col-md-2.control-label Domain Display Name
    .col-md-10
      = text_field_tag "domain[display_name]", @domain.display_name, class: 'form-control', autocomplete: 'off', data: { object: 'create-domain-name', domain_target: '#domain_name' }
  .form-group
    %label.col-md-2.control-label Domain Name
    .col-md-10
      = text_field_tag "domain[name]", @domain.name, maxlength: 30, autocomplete: 'off', data: { placement: 'right' }, class: 'form-control'
- else
  .form-group
    %label.col-md-2.control-label Domain Display Name
    .col-md-10
      = text_field_tag "domain[display_name]", @domain.display_name, class: 'form-control', autocomplete: 'off'

  .form-group
    %label.col-md-2.control-label Domain Name
    .col-md-10
      = text_field_tag "domain[name]", @domain.name, maxlength: 30, class: 'form-control', autocomplete: 'off'
      .callout.callout-info
        %strong Naming convention
        %ul
          %li
            Must be a letter
            %code a-zA-Z
            followed by letters
            = succeed ',' do
              %code a-zA-Z
            numbers
            = succeed ',' do
              %code 0-9
            or underscores
            = succeed '.' do
              %code _
          %li
            Max length
            = succeed '.' do
              %strong 30 characters
        Ex:
        %code domain1_population
.form-group
  %label.col-md-2.control-label Options
  #domain_option.col-md-10{ data: { placement: "left" } }
    #options{ data: { object: "sortable" } }
      = render 'domains/options'
    .btn-toolbar
      = link_to 'Add Options', '#', id: 'add_more_domain_options', class: 'btn btn-default btn-xs', data: { project_id: @project.to_param }
