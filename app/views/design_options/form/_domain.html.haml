.form-group.row
  %label.col-md-2.col-form-label Domain Display Name
  .col-md-10
    = text_field_tag "domain[display_name]", @domain.display_name, class: "form-control", autocomplete: "off", data: { object: (@domain.new_record? ? "create-domain-name" : ""), domain_target: "#domain_name" }
    = render "layouts/errors", object: @domain, key: :display_name

.form-group.row
  %label.col-md-2.col-form-label Domain Name
  .col-md-10
    .input-group
      = text_field_tag "domain[name]", @domain.name, maxlength: 30, class: "form-control", autocomplete: "off"
      .input-group-append
        = link_to "#", class: "btn btn-info", data: { object: "toggle-visibility", target: "#name-info" }, tabindex: "-1" do
          %i.fa.fa-info-circle
    = render "layouts/errors", object: @domain, key: :name
    #name-info.card.border-info.bg-light.mt-3{ style: "display: none;" }
      .card-header
        %strong Naming convention
      .card-body
        %ul
          %li
            Must be a letter
            %code a-zA-Z
            followed by letters
            = succeed "," do
              %code a-zA-Z
            numbers
            = succeed "," do
              %code 0-9
            or underscores
            = succeed "." do
              %code _
          %li
            Max length
            = succeed "." do
              %strong 30 characters
        Ex:
        %code domain1_population

.form-group.row
  %label.col-md-2.col-form-label Options
  #domain_option.col-md-10{ data: { placement: "left" } }
    %table.table.table-borderless
      %col{ width: "1px" }
      %col{ style: @domain && @domain.new_record? ? "display:none" : nil }
      %col
      %col.d-none.d-sm-table-column
      - if @project.sites.count > 1
        %col.d-none.d-lg-table-column
      %col{ width: "1px" }
      %tbody#options{ data: { object: "sortable" } }
        = render "domains/options"
    .btn-toolbar
      = link_to "Add Options", "#", id: "add_more_domain_options", class: "btn btn-light btn-sm", data: { project_id: @project.to_param }
