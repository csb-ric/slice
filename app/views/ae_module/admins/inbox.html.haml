- @title = "Adverse Events"

- content_for :header, @title

- content_for :breadcrumbs do
  %ol
    %li
      = link_to ae_module_dashboard_path(@project) do
        = icon("fas", "caret-left")
        ae dashboard
    %li.breadcrumb-muted admin inbox

- if @adverse_events.present?
  .dashboard-container.dashboard-table
    %table.table.table-striped.table-borderless.table-hover.table-sticky
      %col{ width: "2px" }
      %col{ width: "1px" }
      %col.d-none.d-sm-table-column
      %col
      %col
      %col
      %col{ width: "1px" }
      %thead
        %tr
          %th.p-0
          %th.text-center #
          %th.d-none.d-sm-table-cell Description
          %th Reported
          %th.text-center (reserved)
          %th Team
          %th Status
      %tbody
        - @adverse_events.each do |adverse_event|
          %tr
            %td.p-0.bg-primary
            %td.text-center= link_to adverse_event.name, ae_module_admins_adverse_event_path(@project, adverse_event)
            %td.d-none.d-sm-table-cell{ style: "max-width: 200px;" }
              .overflow-hidden.nowrap= link_to adverse_event.description.truncate(40), ae_module_admins_adverse_event_path(@project, adverse_event)
            %td= adverse_event.created_at.strftime("%a, %b %-d, %Y")
            %td.text-center= icon("far", "square")
            %td
              - if adverse_event.ae_adverse_event_review_teams.present?
                = adverse_event.ae_adverse_event_review_teams.includes(:ae_review_team).pluck(:name).to_sentence
              - else
                %span.text-muted Not assigned.
            %td.nowrap
              %span.badge.badge-primary New
              -# TODO: Check if AE report form is present
              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_sheet_created").present?
                %span.badge.badge-dark= icon("fas", "file")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_info_request_created").where(ae_review_team_id: nil).present?
                %span.badge.badge-dark= icon("fas", "question-circle")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_info_request_resolved").where(ae_review_team_id: nil).present?
                %span.badge.badge-dark= icon("fas", "check-circle")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_team_assigned").present?
                %span.badge.badge-dark= icon("fas", "users")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_info_request_created").where.not(ae_review_team_id: nil).present?
                %span.badge.badge-dark= icon("far", "question-circle")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_info_request_resolved").where.not(ae_review_team_id: nil).present?
                %span.badge.badge-dark= icon("far", "check-circle")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_reviewers_assigned").present?
                %span.badge.badge-dark= icon("fas", "user-clock")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_review_completed").present?
                %span.badge.badge-dark= icon("fas", "user-check")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_final_review_completed").present?
                %span.badge.badge-dark= icon("fas", "user-shield")

              - if adverse_event.ae_adverse_event_log_entries.where(entry_type: "ae_closed").present?
                %span.badge.badge-dark= icon("fas", "lock")

  .center-horizontally= paginate @adverse_events, theme: "bootstrap"
- else
  .jumbotron.jumbotron-custom-text
    No adverse events found.
