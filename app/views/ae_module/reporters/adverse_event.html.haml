- @title = @adverse_event.name

- content_for :header do
  = @title
  %small= @adverse_event.description
= render "ae_module/adverse_events/tabs", project: @project, adverse_event: @adverse_event
- content_for :breadcrumbs do
  %ol
    %li= link_to "adverse events", ae_module_adverse_events_path(@project)
    %li= link_to @subject.name.downcase, [@project, @subject]
    %li.breadcrumb-muted= @adverse_event.name.downcase

.aer-container
  .aer-body
    - designments = @project.ae_designments.where(role: "reporter").order(Arel.sql("position nulls last"))
    - if designments.present?
      %p
        %strong Forms
      - designments.each do |designment|
        - sheets = @adverse_event.sheets.where(design: designment.design)
        - if sheets.present?
          - sheets.each do |sheet|
            .mb-3
              = render "sheets/coverage", sheet: sheet
              = link_to sheet.name, ae_module_reporters_form_path(@project, @adverse_event, sheet.design)
          - next
        - else
          .mb-3
            %span.badge.badge-coverage.coverage-0 0%
            = link_to designment.design.name, ae_module_reporters_form_path(@project, @adverse_event, designment.design)
    %p
      %strong Documents
    .mb-3
      - documents = @adverse_event.ae_documents.order(created_at: :desc).limit(10)
      - if documents.present?
        - if @adverse_event.ae_documents.count > 10
          %p
            Showing most recent
            %strong 10
            documents.

            = link_to ae_module_documents_path(@project, @adverse_event) do
              View all documents
              = icon("fas", "caret-right")
        - documents.each do |document|
          .mb-3
            = render "ae_module/documents/icon", document: document
            - if document.pdf? || document.image?
              = link_to document.filename, ae_module_document_path(@project, @adverse_event, document)
            - else
              = link_to document.filename, download_ae_module_document_path(@project, @adverse_event, document), data: { turbolinks: false }
      - else
        = link_to ae_module_documents_path(@project, @adverse_event) do
          = icon("fas", "paperclip")
          Attach supporting documents
          = icon("fas", "caret-right")

    %p
      %strong Information Requests

    - if @adverse_event.ae_adverse_event_info_requests.where(ae_review_team_id: nil).present?
      - @adverse_event.ae_adverse_event_info_requests.where(ae_review_team_id: nil).order("resolved_at desc NULLS FIRST, created_at").each do |info_request|
        = render "ae_module/info_requests/show", project: @project, adverse_event: @adverse_event, info_request: info_request
    - else
      .mb-3.text-muted No requests.

  .aer-footer
    - if @adverse_event.closed?
      %div
        %span.text-primary= icon("fas", "lock")
        Adverse event closed.
    - elsif @adverse_event.sent_for_review?
      %div
        %span.text-primary= icon("fas", "check-square")
        Sent for review!
    - else
      - design = @adverse_event.next_design_to_complete("reporter")
      - if design
        .mb-3
          %span.text-primary= icon("far", "copy")
          = link_to ae_module_reporters_form_path(@project, @adverse_event, design) do
            Enter sheets
            = icon("fas", "caret-right")
          .small Finalize adverse event report.

      %div
        - if design.present? || @adverse_event.ae_adverse_event_info_requests.where(ae_review_team_id: nil, resolved_at: nil).present?
          %span.text-muted= icon("fas", "paper-plane")
          = link_to "#", disabled: true, class: "text-muted", data: { object: "suppress-click" } do
            Send for review
            = icon("fas", "caret-right")
          .small
            - if design.present? && @adverse_event.ae_adverse_event_info_requests.where(ae_review_team_id: nil, resolved_at: nil).present?
              Enter all sheets and resolve all information request before sending for review.
            - elsif design.present?
              Enter all sheets before sending for review.
            - else
              Resolve all information requests before sending for review.
        - else
          %span.text-primary= icon("fas", "paper-plane")
          = link_to ae_module_reporters_send_for_review_path(@project, @adverse_event), method: :post do
            Send for review
            = icon("fas", "caret-right")
          .small All sheets entered.
