%h2.underline-header= @title

= form_for [@project, @randomization_scheme], html: { class: 'form-horizontal' } do |f|
  - if @randomization_scheme.errors.any?
    #error_explanation.bs-callout.bs-callout-danger
      %h4
        = pluralize @randomization_scheme.errors.count, 'error'
        prohibited this randomization scheme from being saved

      %ul
        - @randomization_scheme.errors.full_messages.each do |msg|
          %li= msg

  .form-group
    = f.label :name, nil, class: 'col-md-2 control-label'
    .col-md-10
      = f.text_field :name, class: 'form-control'

  .form-group
    = f.label :description, nil, class: 'col-md-2 control-label'
    .col-md-10
      = f.text_area :description, rows: 7, class: 'form-control'

  .form-group
    = f.label :randomization_goal, nil, class: 'col-md-2 control-label'
    .col-md-10
      = f.text_field :randomization_goal, class: 'form-control'

  .form-group
    .col-md-10.col-md-offset-2
      - if @randomization_scheme.randomized_subjects?
        %div.alert.alert-info
          %p
            %strong Published
          %p
            Subject randomization has started. If you need to make changes to
            treatment arms, block size multipliers, or stratification factors,
            you will need to undo all existing randomizations, and then
            unpublish the randomization scheme.
      - else
        .checkbox
          %label
            = f.check_box :published
            Published

  - if @randomization_scheme.randomized_subjects?
    .form-group
      .col-md-10.col-md-offset-2
        %div.alert.alert-info
          %p
            %strong Variable Criteria
          - if @randomization_scheme.variable
            %p
              = link_to @randomization_scheme.variable.name, [@project, @randomization_scheme.variable]
            %p
              = @randomization_scheme.variable_value
          - else
            No Mandatory Randomization Criteria
  - else
    .form-group
      = f.label :variable_id, nil, class: 'col-md-2 control-label'
      .col-md-10
        = f.select :variable_id, [['---', nil]] + @project.variables.where(variable_type: ['dropdown', 'string', 'radio', 'integer', 'numeric']).order(:name).collect{|v| [v.name, v.id]}, {}, class: 'form-control'
    .form-group
      = f.label :variable_value, nil, class: 'col-md-2 control-label'
      .col-md-10
        = f.text_field :variable_value, class: 'form-control'

  .form-group
    - if @randomization_scheme.published?
      .col-md-10.col-md-offset-2
        %div.alert.alert-info
          %p
            %strong Algorithm
          %p
            Subjects will be randomized using the
            %code
              = @randomization_scheme.algorithm_name
    - else
      = f.label :algorithm, nil, class: 'col-md-2 control-label'
      .col-md-10
        = f.select :algorithm, RandomizationScheme::ALGORITHMS, {}, class: 'form-control'

  .form-group{ style: "#{'display:none' unless @randomization_scheme.minimization?}", data: { object: 'show-for-minimization' } }
    - if @randomization_scheme.published?
      .col-md-10.col-md-offset-2
        %div.alert.alert-info
          %p
            %strong Chance of Random Treatment Arm Selection
          %p
            = @randomization_scheme.chance_of_random_treatment_arm_selection
            Can be between 0 (Never Random) and 100 (Always Random)
    - else
      = f.label :chance_of_random_treatment_arm_selection, nil, class: 'col-md-2 control-label'
      .col-md-10
        = f.text_field :chance_of_random_treatment_arm_selection, class: 'form-control', placeholder: 30
        .bs-callout.bs-callout-info
          Can be between 0 (Never Random) and 100 (Always Random)

  .form-group
    %label.col-md-2.control-label Tasks
    .col-md-10
      = link_to 'Add Item', add_task_project_randomization_schemes_path, method: :post, remote: true, class: 'btn btn-xs btn-default', style: 'margin-top: 6px'
      #tasks{ data: { object: 'sortable' } }
        = hidden_field_tag 'randomization_scheme[task_hashes][]', nil
        - @randomization_scheme.randomization_scheme_tasks.each do |randomization_scheme_task|
          = render 'randomization_schemes/task_form', randomization_scheme_task: randomization_scheme_task


  .form-group
    .col-md-offset-2.col-md-10
      = f.submit nil, class: 'btn btn-primary'
      = cancel
