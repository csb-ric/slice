- from_subject_page = (params[:subject_code].present? && @adverse_event.subject && params[:subject_code].to_s == @adverse_event.subject.subject_code)

= form_with model: [@project, @adverse_event], local: true do |form|
  .form-group.row
    = form.label :subject_id, "Subject Code", class: "col-md-2 col-form-label"
    .col-md-10
      - if from_subject_page
        .form-control-plaintext
          = form.hidden_field :subject_code
          = link_to @adverse_event.subject.subject_code, [@project, @subject]
      - else
        = form.text_field :subject_id, autocomplete: "off", id: "subject-search", class: "form-control#{" is-invalid" if @adverse_event.errors[:subject_id].present?}", data: { project_slug: @project.to_param }, name: "adverse_event[subject_code]", value: @adverse_event.subject_code
        = render "forms/invalid_feedback", object: @adverse_event, key: :subject_id

  = render "forms/horizontal/text_field", form: form, object: @adverse_event, key: :description, key_name: "Short description"

  .form-group.row
    = form.label :adverse_event_date, nil, class: "col-md-2 col-form-label"
    .col-md-10
      = form.text_field :adverse_event_date, class: "datepicker form-control#{" is-invalid" if @adverse_event.errors[:adverse_event_date].present?}", placeholder: "mm/dd/yyyy", name: "adverse_event[event_date]", value: @adverse_event.event_date
      = render "forms/invalid_feedback", object: @adverse_event, key: :adverse_event_date

  .form-group.row.mt-5.mb-0
    .col-md-2
    .col-md-10
      = form.submit @adverse_event.new_record? ? "Report Adverse Event" : nil, class: "btn btn-primary"
      - if from_subject_page
        = link_to "Cancel", [@project, @adverse_event.subject], class: "btn btn-light"
      - else
        = link_to "Cancel", @adverse_event.new_record? ? project_adverse_events_path(@project) : [@project, @adverse_event], class: "btn btn-light"
