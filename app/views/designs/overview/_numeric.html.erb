<% missing_responses = responses.select{|r| r.blank?} %>
<% valid_responses = responses.select{|r| not r.blank?}.map(&:to_f) %>

<% valid_sheets = sheet_scope.with_stratum(variable.id, ':any') %>

<table class="table">
  <thead>
    <tr>
      <th></th>
      <th>N</th>
      <th>Mean</th>
      <th>StdDev</th>
      <th>Median</th>
      <th>Min</th>
      <th>Max</th>
      <th class="text-muted">Unknown</th>
      <th>Total</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><span data-object="sparkline" data-type="box" data-values="<%= valid_responses.to_json %>" data-min="<%= @overall_min %>" data-max="<%= @overall_max %>" style="display:none"></span></td>
      <td><%= filter_link(Sheet.array_count(valid_responses), @project, @design, variable, ':any', @statuses) %></td>
      <td>
        <% mean = Sheet.array_calculation(valid_sheets, variable, 'array_mean') %>
        <%= mean ? mean : '-' %>
      </td>
      <td>
        <% stdev = Sheet.array_calculation(valid_sheets, variable, 'array_standard_deviation') %>
        <%= stdev ? "&plusmn; #{stdev}".html_safe : '-' %>
      </td>
      <td>
        <% median = Sheet.array_calculation(valid_sheets, variable, 'array_median') %>
        <%= median ? filter_link(median, @project, @design, variable, "%g"%median, @statuses) : '-' %>
      </td>
      <td>
        <% min = Sheet.array_calculation(valid_sheets, variable, 'array_min') %>
        <%= min ? filter_link(min, @project, @design, variable, "%g"%min, @statuses) : '-' %>
      </td>
      <td>
        <% max = Sheet.array_calculation(valid_sheets, variable, 'array_max') %>
        <%= max ? filter_link(max, @project, @design, variable, "%g"%max, @statuses) : '-' %>
      </td>
      <td><%= filter_link(Sheet.array_count(missing_responses), @project, @design, variable, ':missing', @statuses) %></td>
      <td><%= filter_link(Sheet.array_count(responses), @project, @design, nil, nil, @statuses) %></td>
    </tr>
  </tbody>
</table>
