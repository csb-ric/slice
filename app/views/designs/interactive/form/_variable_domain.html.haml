- @variable = @design.project.variables.find_by_id(params[:variable_id])
- @domain = @variable.domain || @project.domains.new

.modal-header
  %button.close{ type: "button", data: { dismiss: "modal" }, aria: { hidden: true } } &times;
  %h4.modal-title
    Edit Variable Domain &middot;
    = @variable.name
.modal-body
  %form#domain_form.form-horizontal
    - if @domain.new_record?
      .form-group
        %label.col-md-2.control-label Domain Display Name
        .col-md-10
          = text_field_tag "domain[display_name]", @domain.display_name, class: 'form-control', autocomplete: 'off', data: { object: 'create-domain-name push-partial-change-text-field', target: '#domain_form', create: 'domain', position: params[:position], domain_target: '#domain_name', variable_id: @variable.id }
      .form-group
        %label.col-md-2.control-label Domain Name
        .col-md-10
          = text_field_tag "domain[name]", @domain.name, maxlength: 30, autocomplete: 'off', data: { placement: 'right', object: 'push-partial-change-text-field', target: '#domain_form', create: 'domain', position: params[:position], variable_id: @variable.id }, class: 'form-control'
    - else
      .form-group
        %label.col-md-2.control-label Domain Display Name
        .col-md-10
          = text_field_tag "domain[display_name]", @domain.display_name, class: 'form-control', autocomplete: 'off', data: { object: 'push-partial-change-text-field', target: '#domain_form', update: 'domain', position: params[:position], variable_id: @variable.id }

      .form-group
        %label.col-md-2.control-label Domain Name
        .col-md-10
          = text_field_tag "domain[name]", @domain.name, maxlength: 30, class: 'form-control', autocomplete: 'off', data: { object: 'push-partial-change-text-field', target: '#domain_form', update: 'domain', position: params[:position], variable_id: @variable.id }
          .bs-callout.bs-callout-info
            %h4 Naming convention
            %ul
              %li
                Must be a letter
                %code a-zA-Z
                followed by letters
                = succeed ',' do
                  %code a-zA-Z
                numbers
                = succeed ',' do
                  %code 0-9
                or underscores
                = succeed '.' do
                  %code _
              %li
                Max length
                = succeed '.' do
                  %strong 30 characters
            Ex:
              %code domain1_population
    .form-group
      %label.col-md-2.control-label Options
      #domain_option.col-md-10{ data: { placement: "left" } }
        #options{ data: { object: "sortable" } }
          = render 'domains/options'
        .btn-toolbar
          = link_to 'Add Options', '#', id: 'add_more_domain_options', class: 'btn btn-default btn-xs'
.modal-footer
  - if @domain.new_record?
    = button_tag 'Add Domain', data: { object: 'push-partial-change', target: '#domain_form', create: 'domain', position: params[:position], variable_id: @variable.id }, class: 'btn btn-primary'
  - else
    - other_variables = @domain.variables.count - 1
    = button_tag "Update Existing Domain" + (other_variables > 0 ? " (linked to #{pluralize(other_variables, 'other variable')})" : ""), data: { object: 'push-partial-change', target: '#domain_form', update: 'domain', position: params[:position], variable_id: @variable.id }, class: 'btn btn-primary'
    or
    = button_tag 'Copy Choices to New Domain', data: { object: 'push-partial-change', target: '#domain_form', create: 'domain', position: params[:position], variable_id: @variable.id }, class: 'btn btn-primary'
  - domains = @project.domains
  - if domains.count > 0
    or
    %span.form-inline
      = select_tag 'domain[id]', options_for_select( [['--Existing Domains--', nil]] + domains.order('name').collect{|d| [d.name, d.id]} ), style: 'width:200px', class: 'form-control'
      = button_tag 'Use Selected Domain', data: { object: 'push-partial-change', target: '#domain_id', create: 'domain', position: params[:position], variable_id: @variable.id }, class: 'btn btn-primary'
  %button.btn.btn-default{ type: "button", data: { dismiss: "modal" } } Cancel
